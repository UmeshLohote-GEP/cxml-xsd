<?xml version="1.0" encoding="UTF-8"?>
<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id$
-->
<xs:schema  xmlns:xs="http://www.w3.org/2001/XMLSchema"
   
  elementFormDefault="unqualified">
  <!-- Import xml: namespace -->
  <xs:import namespace="http://www.w3.org/XML/1998/namespace"
    schemaLocation="http://www.w3.org/2001/xml.xsd" />
  <xs:include schemaLocation="cxml-base.xsd" />
  
  <!--
    LaborDetail contains information about an item for a temporary
    labor engagement. 

    UnitRate
        The amount(s) to be paid per unit (of time or other measure).
        In the case of multiple UnitRates (i.e., a "rate schedule"), it is
        customary and expected that each UnitRate will include a
        TermReference to distinguish them.

    Period
        The Period of time over which the service occurs.

    Contractor
        Identifies the contractor being engaged

    JobDescription
        Description of the job or work to be performed.

    Supervisor
        The person who is expected to supervise the contractor.

    WorkLocation
        Place where the work is expected to be performed.

    supplierReferenceCode
        The supplier's quote or proposal id, for cross-reference.
  -->
  <xs:element name="LaborDetail">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="1" maxOccurs="unbounded" ref="UnitRate"/>
        <xs:element ref="Period"/>
        <xs:element minOccurs="0" maxOccurs="1" ref="Contractor" />
        <xs:element minOccurs="0" maxOccurs="1" ref="JobDescription" />
        <xs:element minOccurs="0" maxOccurs="1" ref="Supervisor" />
        <xs:element minOccurs="0" maxOccurs="1" ref="WorkLocation" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Extrinsic"/>
      </xs:sequence>
      <xs:attribute name="supplierReferenceCode" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  
  <!--    Text description of a job (service)-->
  <xs:element name="JobDescription">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="Description"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  
  <!--    Contact information for the person supervising a job (service)-->
  <xs:element name="Supervisor">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="Contact"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  
  <!--    Address of the location where a service is to be performed-->
  <xs:element name="WorkLocation">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="Address"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  
  <!--
    Definition of a Contractor used in the context of temp labor. 
    The contractor is uniquely identified by a contractor identifier. 
    The piece of identification for a contractor is exchanged between 
    the buyer and the supplier prior to sending out order/timecards.
  -->
  <xs:element name="Contractor">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ContractorIdentifier"/>
        <xs:element ref="Contact"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  
  <!--
        Definition of a ContractorIdentifier. uniquely identifies a contractor.
    
    domain
        Domain in which the identity is represented. This is for the
        end systems to know who assigned the id. buyerReferenceID 
        implies that it is something generated by the buyer system 
        and supplierReferenceID implies that it is something generated 
        by the supplier system/entered by the supplier.
  -->
  <xs:element name="ContractorIdentifier">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="domain" use="required">
            <xs:simpleType>
              <xs:restriction base="xs:NMTOKEN">
                <xs:enumeration value="supplierReferenceID" />
                <xs:enumeration value="buyerReferenceID" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
 </xs:schema>